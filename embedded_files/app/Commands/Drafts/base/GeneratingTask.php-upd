<?php
/*
 |-----------------------------------------------------------|
 | //////////////////  ATTENTION  ////////////////////////// |
 |-----------------------------------------------------------|
 |                                                           |
 | This file is automatically generated.                     |
 | All changes made will be lost when updating the library.  |
 |                                                           |
 |                                                           |
 |-----------------------------------------------------------|
 | ///////////////////  ВНИМАНИЕ  ////////////////////////// |
 |-----------------------------------------------------------|
 |                                                           |
 | Этот файл сгенерирован автоматически                      |
 | Все внесенные изменения будут потеряны при обновлении.    |
 |                                                           |
 |                                                           |
 |-----------------------------------------------------------|
 */

namespace App\Commands\Drafts;

use Phphleb\Draft\Src\Converter;
use Phphleb\Draft\Src\DirectoryChanger;

class GeneratingTask extends \Hleb\Scheme\App\Commands\MainTask
{
    // php console drafts/generating-task [arg] [config]

    const DESCRIPTION = "Creating classes from drafts";

    const COMMAND_PATTERN = 'php console drafts/generating-task [<name> | --update-all] [<config>]';

    protected function execute($arg = null, $config = '/app/Optional/services.php'): void
     {
         if (empty($arg)) {
             exit(PHP_EOL . 'Command pattern: ' . self::COMMAND_PATTERN . PHP_EOL);
         }
         $configPath = DirectoryChanger::globalDir() . DIRECTORY_SEPARATOR . ltrim($config, '\\/ ');
         if (!file_exists($configPath)) {
             exit(PHP_EOL . 'The specified config file was not found!'. PHP_EOL);
         }
         $config = require $configPath;
         if (isset($config[$arg])) {
             $config = [$arg => $config[$arg]];
         } else if ($arg != '--update-all') {
             exit(PHP_EOL . 'Command pattern: ' . self::COMMAND_PATTERN . PHP_EOL);
         }
         $instancesDir = DirectoryChanger::globalDir() . '/app/Drafts';
         $patternsDir = DirectoryChanger::globalDir() . '/app/Optional/DraftInstances';
         $converter = new Converter($config, $instancesDir, $patternsDir);
         if ($converter->run()) {
             echo PHP_EOL . 'Class' . (count($config) === 1 ? '' : 'es' ) . ' have been successfully generated!' . PHP_EOL;
         }
         if (count($converter->getErrors())) {
             print_r($converter->getErrors());
         }
         echo PHP_EOL . __CLASS__ . " done." . PHP_EOL;
     }

}

